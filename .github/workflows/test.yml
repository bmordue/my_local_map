name: Test Lumsden Map Generator

on:
  pull_request:
    branches: [ main, master ]
  push:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ['3.12']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gdal-bin python3-dev
        # Install mapnik development libraries
        sudo apt-get install -y libmapnik-dev mapnik-utils python3-mapnik
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-test.txt
        # Install requests for the main application
        pip install requests
    
    - name: Verify installations
      run: |
        # Check GDAL/OGR
        ogr2ogr --version
        # Check Python imports (mapnik might not be available in all Python versions)
        python -c "import requests; print('requests OK')"
        python -c "try: import mapnik; print('mapnik available'); except ImportError: print('mapnik not available but tests can still run with mocks')"
    
    - name: Run unit tests
      run: |
        python -m pytest tests/test_config.py tests/test_data_processing.py tests/test_style_builder.py -v --tb=short
    
    - name: Run integration tests
      run: |
        python -m pytest tests/test_integration.py -v --tb=short
    
    - name: Run all tests with coverage
      run: |
        python -m pytest tests/ --cov=. --cov-report=xml --cov-report=term-missing -v
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install linting dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort
    
    - name: Run black formatter check
      run: |
        black --check --diff .
      continue-on-error: true
    
    - name: Run isort import checker
      run: |
        isort --check-only --diff .
      continue-on-error: true
    
    - name: Run flake8 linter
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # treat all other issues as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
      continue-on-error: true
