name: Test Lumsden Map Generator

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install Nix
      uses: cachix/install-nix-action@v31
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        
    - name: Setup Nix cache
      uses: cachix/cachix-action@v12
      with:
        name: devenv
        skipPush: true
    
    - name: Verify Nix environment
      run: |
        nix develop --command bash -c "
          ogr2ogr --version
          python -c 'import requests; print(\"✓ requests available\")'
          python -c 'from PIL import Image; print(\"✓ Pillow available\")'
          python -c 'import pytest; print(\"✓ pytest available\")'
          # Note: mapnik might not be available in CI, but tests work with mocks
          python -c 'try: import mapnik; print(\"✓ mapnik available\"); except ImportError: print(\"✓ mapnik not available but tests can still run with mocks\")'
        "
    
    - name: Run tests
      run: |
        nix develop --command python -m pytest tests/ -v
    
    - name: Run tests with coverage
      run: |
        nix develop --command python -m pytest tests/ --cov=. --cov-report=xml --cov-report=term-missing -v
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install Nix
      uses: cachix/install-nix-action@v31
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        
    - name: Setup Nix cache
      uses: cachix/cachix-action@v12
      with:
        name: devenv
        skipPush: true
    
    - name: Install linting dependencies in Nix shell
      run: |
        # Verify that linting tools are available in the development shell
        nix develop --command bash -c "
          echo '✓ Linting tools available in Nix environment'
          black --version
          isort --version
          flake8 --version
        "
    
    - name: Run black formatter check
      run: |
        nix develop --command black --check --diff .
      continue-on-error: true
    
    - name: Run isort import checker
      run: |
        nix develop --command isort --check-only --diff .
      continue-on-error: true
    
    - name: Run flake8 linter (PEP8 check)
      run: |
        chmod +x utils/check_flake8.sh
        ./utils/check_flake8.sh
      continue-on-error: true
